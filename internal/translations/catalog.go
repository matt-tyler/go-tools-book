// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package translations

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"de_DE": &dictionary{index: de_DEIndex, data: de_DEData},
		"en_GB": &dictionary{index: en_GBIndex, data: en_GBData},
	}
	fallback := language.MustParse("en-GB")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"It's %d minute(s) past %d": 0,
}

var de_DEIndex = []uint32{ // 2 elements
	0x00000000, 0x00000049,
} // Size: 32 bytes

const de_DEData string = "" + // Size: 73 bytes
	"\x14\x01\x81\x01\x00=\x01\x1f\x02Es ist %[1]d Minute nach %[2]d\x00 \x02" +
	"Es ist %[1]d Minuten nach %[2]d"

var en_GBIndex = []uint32{ // 2 elements
	0x00000000, 0x00000045,
} // Size: 32 bytes

const en_GBData string = "" + // Size: 69 bytes
	"\x14\x01\x81\x01\x00=\x01\x1d\x02It's %[1]d minute past %[2]d\x00\x1e" +
	"\x02It's %[1]d minutes past %[2]d"

	// Total table size 206 bytes (0KiB); checksum: 21C14E6C
